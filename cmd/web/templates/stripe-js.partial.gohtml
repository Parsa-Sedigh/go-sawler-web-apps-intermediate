{{define "stripe-js"}}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        let card;
        const stripe = Stripe({{.StripePublishableKey}});

        const cardMessages = document.getElementById('card-messages');
        const payButton = document.getElementById('pay-button');
        const processing = document.getElementById('processing-payment');

        function hidePayButton() {
            payButton.classList.add('d-none');
            processing.classList.remove('d-none');
        }

        function showPayButtons() {
            payButton.classList.remove('d-none');
            processing.classList.add('d-none');
        }

        function showCardError(msg) {
            // we'll be using the same element for success message, so we need to remove the success classes and add error ones here as well
            cardMessages.classList.add('alert-danger');
            cardMessages.classList.remove('alert-success');
            cardMessages.classList.remove('d-none');
            cardMessages.innerText = msg;
        }

        function showCardSuccess() {
            cardMessages.classList.remove('alert-danger');
            cardMessages.classList.add('alert-success');
            cardMessages.classList.remove('d-none');
            cardMessages.innerText = 'Transaction successful';
        }

        function val() {
            const form = document.getElementById('charge_form');
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add('was-validated');
                return;
            }

            form.classList.add('was-validated');
            hidePayButton();

            const amountToCharge = document.getElementById('amount').value;
            const payload = {
                amount: amountToCharge,
                currency: 'cad'
            };
            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
            };

            fetch('{{.API}}/api/payment-intent', requestOptions)
                .then(response => response.text())
                .then(response => {
                    let data;

                    try {
                        data = JSON.parse(response);

                        // this will charge the credit card:
                        stripe.confirmCardPayment(data.client_secret, {
                            payment_method: {
                                card,
                                billing_details: {
                                    name: document.getElementById('cardholder-name').value
                                }
                            }
                        }).then(function (result) {
                            if (result.error) {
                                // card declined or sth went wrong with the card(for example maybe it's a stolen card)
                                showCardError(result.error.message);
                                showPayButtons();
                            } else if (result.paymentIntent) {
                                if (result.paymentIntent.status === "succeeded") {
                                    // if we got here, we have charged the card
                                    // document.getElementById('payment_method').value = result.paymentIntent.payment_method_types[0];
                                    document.getElementById('payment_method').value = result.paymentIntent.payment_method;
                                    document.getElementById('payment_intent').value = result.paymentIntent.id;
                                    document.getElementById('payment_amount').value = result.paymentIntent.amount;
                                    document.getElementById('payment_currency').value = result.paymentIntent.currency;

                                    // hide the spinner:
                                    processing.classList.add('d-none');

                                    showCardSuccess();

                                    // would submit the form(which will generate a receipt)
                                    document.getElementById('charge_form').submit();
                                }
                            }
                        });
                    } catch (err) {
                        console.log(err);
                        showCardError('Invalid response from payment gateway!');
                        showPayButtons();
                    }
                });
        }

        // initializes and displays credit card field:
        (function () {
            // create stripe and it's elements
            const elements = stripe.elements();
            const style = {
                base: {
                    fontSize: '16px',
                    lineHeight: '24px'
                }
            };

            // create card entry
            card = elements.create('card', {
                style,

                // in production, you always want to have postal code check, but in development it's find to turn it off
                hidePostalCode: true
            });

            card.mount('#card-element');

            // check for input errors
            card.addEventListener('change', function (event) {
                const displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.classList.remove('d-none');
                    displayError.textContent = event.error.message;
                } else {
                    displayError.classList.add('d-none'); // hide the error(if there is one or not doesn't matter, we hide it anyway)
                    displayError.textContent = '';
                }
            });
        })();
    </script>
{{end}}