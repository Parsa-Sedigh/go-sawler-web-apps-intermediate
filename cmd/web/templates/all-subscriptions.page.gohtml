{{template "base" .}}

{{define "title"}}
    All Subscriptions
{{end}}

{{define "content"}}
    <h2 class="mt-5">All Subscriptions</h2>
    <hr/>

    <table id="sales-table" class="table table-striped">
        <thead>
        <tr>
            <th>Transaction</th>
            <th>Customer</th>
            <th>Product</th>
            <th>Amount</th>
            <th>Status</th>
        </tr>
        </thead>
        <tbody>

        </tbody>
    </table>

    <nav>
        <ul id="paginator" class="pagination"></ul>
    </nav>
{{end}}

{{define "js"}}
    <script>
        const currentPage = 1;
        const pageSize = 3 ;

        function paginator(pages, curPage) {
            const p = document.getElementById('paginator');

            // previous page
            let html = `<li class="page-item"><a href="#" class="page-link pager" data-page="${curPage - 1}">&lt;</a></li>`;

            for (let i = 0; i < pages; i++) {
                html += `<li class="page-item"><a href="#" class="page-link pager" data-page="${i + 1}">${i + 1}</a></li>`;
            }

            // next page
            html += `<li class="page-item"><a href="#" class="page-link pager" data-page="${i + 1}">&gt;</a></li>`;

            p.innerHTML = html;

            const pageBtns = document.getElementsByClassName('pager');
            for (let j = 0; j < pageBtns.length; j++) {
                pageBtns[j].addEventListener('click', function (evt) {
                    const desiredPage = evt.target.getAttribute('data-page');

                    if (desiredPage > 0 && desiredPage <= pages + 1) {
                        updateTable(pageSize, desiredPage);
                    }
                });
            }
        }

        function updateTable(ps, cp) {
            const token = localStorage.getItem('token');
            const tbody = document.getElementById('sales-table').getElementsByTagName('tbody')[0];
            const body = {
                // the api expects these to be int
                page_size: parseInt(ps, 10),
                page: parseInt(cp, 10)
            };
            const requestOptions = {
                method: 'post',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                    Authorization: `Bearer ${token}`
                },
                body: JSON.stringify(body)
            };

            fetch('{{.API}}/api/admin/all-subscriptions', requestOptions)
                .then(response => response.json())
                .then(function (data) {
                    if (data.orders) {
                        data.orders.forEach(function (i) {
                            const newRow = tbody.insertRow();
                            let newCell = newRow.insertCell();
                            newCell.innerHTML = `<a href="/admin/subscriptions/${i.id}">Order ${i.id}</a>`;

                            newCell = newRow.insertCell();
                            let item = document.createTextNode(i.customer.last_name + ', ' + i.customer.first_name);

                            newCell.appendChild(item);

                            newCell = newRow.insertCell();
                            item = document.createTextNode(i.widget.name);
                            newCell.appendChild(item);

                            const cur = formatCurrency(i.transaction.amount);

                            newCell = newRow.insertCell();
                            item = document.createTextNode(cur + '/month');
                            newCell.appendChild(item);

                            newCell = newRow.insertCell();
                            if (i.status_id !== 1) {
                                newCell.innerHTML = `<span class="badge bg-danger">Cancelled</span>`;
                            } else {
                                newCell.innerHTML = `<span class="badge bg-success">Charged</span>`;
                            }
                        });

                        paginator(data.last_page, data.current_page);
                    } else {
                        const newRow = tbody.insertRow();
                        let newCell = newRow.insertCell();
                        newCell.setAttribute('colspan', '4');
                        newCell.innerHTML = 'No data available';
                    }
                });

            function formatCurrency(amount) {
                const c = parseFloat(amount/100);

                return c.toLocaleString('en-CA', {
                    style: 'currency',
                    currency: 'CAD'
                });
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            updateTable(pageSize, currentPage);
        });

        fetch('{{.API}}/api/admin/all-subscriptions', requestOptions)
            .then(response => response.json())
            .then(function (data) {
                if (data) {
                    data.forEach(function (i) {
                        const newRow = tbody.insertRow();
                        let newCell = newRow.insertCell();
                        newCell.innerHTML = `<a href="/admin/subscriptions/${i.id}">Order ${i.id}</a>`;

                        newCell = newRow.insertCell();
                        let item = document.createTextNode(i.customer.last_name + ', ' + i.customer.first_name);

                        newCell.appendChild(item);

                        newCell = newRow.insertCell();
                        item = document.createTextNode(i.widget.name);
                        newCell.appendChild(item);

                        const cur = formatCurrency(i.transaction.amount);

                        newCell = newRow.insertCell();
                        item = document.createTextNode(`${cur}/month`);
                        newCell.appendChild(item);

                        newCell = newRow.insertCell();
                        if (i.status_id !== 1) {
                            newCell.innerHTML = `<span class="badge badge-danger">Cancelled</span>`;
                        } else {
                            newCell.innerHTML = `<span class="badge badge-success">Charged</span>`;
                        }
                    });
                } else {
                    const newRow = tbody.insertRow();
                    let newCell = newRow.insertCell();
                    newCell.setAttribute('colspan', '4');
                    newCell.innerHTML = 'No data available';
                }
            });

        function formatCurrency(amount) {
            const c = parseFloat(amount/100);

            return c.toLocaleString('en-CA', {
                style: 'currency',
                currency: 'CAD'
            });
        }
    </script>
{{end}}